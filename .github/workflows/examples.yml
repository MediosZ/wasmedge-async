name: examples

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'info'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install apt-get packages
      run: |
        sudo ACCEPT_EULA=Y apt-get update
        sudo ACCEPT_EULA=Y apt-get upgrade
        sudo apt-get install wget git curl software-properties-common build-essential
    - name: Install Rust target
      run: |
        rustup target add wasm32-wasi
    - name: Install WasmEdge
      run: |
        VERSION=0.10.0-alpha.1
        curl -sSf https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/utils/install.sh | sudo bash -s -- -e all --version=$VERSION --tf-version=$VERSION --tf-deps-version=$VERSION --tf-tools-version=$VERSION --image-version=$VERSION --image-deps-version=$VERSION  -p /usr/local
    
    - name: TCP async server example
      run: |
        cd examples/async_tcp_server/
        cargo build --target wasm32-wasi --release
        nohup wasmedge target/wasm32-wasi/release/async_tcp_server.wasm &
        echo $! > wasmedge.pid
        sleep 5
        resp=$(curl --http0.9 -X POST http://127.0.0.1:1235 -d "name=WasmEdge")
        echo "Server response is $resp"
        kill -9 `cat wasmedge.pid`
        rm wasmedge.pid
        sleep 5
    
    - name: TCP async client example
      run: |
        cd examples/async_tcp_stream/
        cargo build --target wasm32-wasi --release
        nohup python3 ./server.py &
        echo $! > pyserver.pid
        sleep 5
        wasmedge target/wasm32-wasi/release/async_tcp_stream.wasm
        kill -9 `cat pyserver.pid`
        rm pyserver.pid

    